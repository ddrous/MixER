{
    "1": {
      "name": "RC-circuit (charging capacitor)",
      "function": "lambda t, y, c0, c1, c2: [-c0*y[0] + c1 - c2]",
      "parameters": {"c0": 0.7, "c1": 1.2, "c2": 2.31},
      "initial_values": [[10.0], [3.54]],
      "time_horizon": 20
    },
    "2": {
      "name": "Population growth (naive)",
      "function": "lambda t, y, c0: [c0*y[0]]",
      "parameters": {"c0": 0.23},
      "initial_values": [[4.78], [0.87]],
      "time_horizon": 30
    },
    "3": {
      "name": "Population growth with carrying capacity",
      "function": "lambda t, y, c0, c1: [c0*y[0]*(1 - y[0]/c1)]",
      "parameters": {"c0": 0.79, "c1": 74.3},
      "initial_values": [[7.3], [21.0]],
      "time_horizon": 40
    },
    "4": {
      "name": "RC-circuit with non-linear resistor (charging capacitor)",
      "function": "lambda t, y, c0, c1: [0.5 + 1/(np.exp(c0 - y[0]/c1) + 1)]",
      "parameters": {"c0": 0.5, "c1": 0.96},
      "initial_values": [[0.8], [0.02]],
      "time_horizon": 25
    },
    "5": {
      "name": "Velocity of a falling object with air resistance",
      "function": "lambda t, y, c0, c1: [c0 - c1*y[0]**2]",
      "parameters": {"c0": 9.81, "c1": 0.0021175},
      "initial_values": [[0.5], [73.0]],
      "time_horizon": 15
    },
    "6": {
      "name": "Autocatalysis with one fixed abundant chemical",
      "function": "lambda t, y, c0, c1: [c0*y[0] - c1*y[0]**2]",
      "parameters": {"c0": 2.1, "c1": 0.5},
      "initial_values": [[0.13], [2.24]],
      "time_horizon": 20
    },
    "7": {
      "name": "Gompertz law for tumor growth",
      "function": "lambda t, y, c0, c1: [c0*y[0]*np.log(c1/y[0])]",
      "parameters": {"c0": 0.032, "c1": 2.29},
      "initial_values": [[1.73], [9.5]],
      "time_horizon": 10
    },
    "8": {
      "name": "Logistic equation with Allee effect",
      "function": "lambda t, y, c0, c1, c2: [c0*y[0]*(1 + y[0]/c2)*(1 - y[0]/c1)]",
      "parameters": {"c0": 0.14, "c1": 130.0, "c2": 4.4},
      "initial_values": [[6.123], [2.1]],
      "time_horizon": 20
    },
    "9": {
      "name": "Language death model for two languages",
      "function": "lambda t, y, c0, c1: [c0*(1 - y[0]) - c1*y[0]]",
      "parameters": {"c0": 0.32, "c1": 0.28},
      "initial_values": [[0.14], [0.55]],
      "time_horizon": 50
    },
    "10": {
      "name": "Refined language death model for two languages",
      "function": "lambda t, y, c0, c1: [c0*y[0]**c1*(1 - y[0]) - y[0]*(1 - c0)*(1 - y[0])**c1]",
      "parameters": {"c0": 0.2, "c1": 1.2},
      "initial_values": [[0.83], [0.34]],
      "time_horizon": 10
    },
    "11": {
      "name": "Naive critical slowing down (statistical mechanics)",
      "function": "lambda t, y: [-y[0]**3]",
      "parameters": {},
      "initial_values": [[3.4], [1.6]],
      "time_horizon": 10
    },
    "12": {
      "name": "Photons in a laser (simple)",
      "function": "lambda t, y, c0, c1: [c0*y[0] - c1*y[0]**2]",
      "parameters": {"c0": 1.8, "c1": 0.1107},
      "initial_values": [[11.0], [1.3]],
      "time_horizon": 30
    },
    "13": {
      "name": "Overdamped bead on a rotating hoop",
      "function": "lambda t, y, c0, c1: [-c0*(c1*np.cos(y[0]) - 1)*np.sin(y[0])]",
      "parameters": {"c0": 0.0981, "c1": 9.7},
      "initial_values": [[3.1], [2.4]],
      "time_horizon": 100
    },
    "14": {
      "name": "Budworm outbreak model with predation",
      "function": "lambda t, y, c0, c1, c2, c3: [c0*y[0]*(1 - y[0]/c1) - c3*y[0]**2/(c2**2 + y[0]**2)]",
      "parameters": {"c0": 0.78, "c1": 81.0, "c2": 21.2, "c3": 0.9},
      "initial_values": [[2.76], [23.3]],
      "time_horizon": 20
    },
    "15": {
      "name": "Budworm outbreak with predation (dimensionless)",
      "function": "lambda t, y, c0, c1: [c0*y[0]*(1 - y[0]/c1) - y[0]**2/(y[0]**2 + 1)]",
      "parameters": {"c0": 0.4, "c1": 95.0},
      "initial_values": [[44.3], [4.5]],
      "time_horizon": 30
    },
    "16": {
      "name": "Landau equation (typical time scale tau = 1)",
      "function": "lambda t, y, c0, c1, c2: [c0*y[0] - c1*y[0]**3 - c2*y[0]**5]",
      "parameters": {"c0": 0.1, "c1": -0.04, "c2": 0.001},
      "initial_values": [[0.94], [1.65]],
      "time_horizon": 10
    },
    "17": {
      "name": "Logistic equation with harvesting/fishing",
      "function": "lambda t, y, c0, c1, c2: [c0*y[0]*(1 - y[0]/c1) - c2]",
      "parameters": {"c0": 0.4, "c1": 100.0, "c2": 0.3},
      "initial_values": [[14.3], [34.2]],
      "time_horizon": 15
    },
    "18": {
      "name": "Improved logistic equation with harvesting/fishing",
      "function": "lambda t, y, c0, c1, c2, c3: [c0*y[0]*(1 - y[0]/c1) - c2*y[0]/(c3 + y[0])]",
      "parameters": {"c0": 0.4, "c1": 100.0, "c2": 0.24, "c3": 50.0},
      "initial_values": [[21.1], [44.1]],
      "time_horizon": 20
    },
    "19": {
      "name": "Improved logistic equation with harvesting/fishing (dimensionless)",
      "function": "lambda t, y, c0, c1: [-c0*y[0]/(c1 + y[0]) + y[0]*(1 - y[0])]",
      "parameters": {"c0": 0.08, "c1": 0.8},
      "initial_values": [[0.13], [0.03]],
      "time_horizon": 10
    },
    "20": {
      "name": "Autocatalytic gene switching (dimensionless)",
      "function": "lambda t, y, c0, c1: [c0 - c1*y[0] + y[0]**2/(y[0]**2 + 1)]",
      "parameters": {"c0": 0.1, "c1": 0.55},
      "initial_values": [[0.002], [0.25]],
      "time_horizon": 50
    },
    "21": {
      "name": "Dimensionally reduced SIR infection model for dead people (dimensionless)",
      "function": "lambda t, y, c0, c1: [c0 - c1*y[0] - np.exp(y[0])]",
      "parameters": {"c0": 1.2, "c1": 0.2},
      "initial_values": [[0.0], [0.8]],
      "time_horizon": 30
    },
    "22": {
      "name": "Hysteretic activation of a protein expression (positive feedback, basal promoter expression)",
      "function": "lambda t, y, c0, c1, c2, c3: [c0 + c1*y[0]**5/(c2 + y[0]**5) - c3*y[0]]",
      "parameters": {"c0": 1.4, "c1": 0.4, "c2": 123.0, "c3": 0.89},
      "initial_values": [[3.1], [6.3]],
      "time_horizon": 10
    },
    "23": {
      "name": "Overdamped pendulum with constant driving torque/fireflies/Josephson junction (dimensionless)",
      "function": "lambda t, y, c0: [c0 - np.sin(y[0])]",
      "parameters": {"c0": 0.21},
      "initial_values": [[-2.74], [1.65]],
      "time_horizon": 10
    }
  }